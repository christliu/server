# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ServerCommon.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import service as _service
from google.protobuf import service_reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ServerCommon.proto',
  package='christliu',
  serialized_pb=_b('\n\x12ServerCommon.proto\x12\tchristliu\"\x06\n\x04void\"\x1d\n\nEchoString\x12\x0f\n\x07message\x18\x01 \x02(\t2C\n\rServiceCommon\x12\x32\n\x08sayHello\x12\x15.christliu.EchoString\x1a\x0f.christliu.void2F\n\x0c\x43lientCommon\x12\x36\n\x0chelloRespond\x12\x15.christliu.EchoString\x1a\x0f.christliu.voidB\x03\x90\x01\x01')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_VOID = _descriptor.Descriptor(
  name='void',
  full_name='christliu.void',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=33,
  serialized_end=39,
)


_ECHOSTRING = _descriptor.Descriptor(
  name='EchoString',
  full_name='christliu.EchoString',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='christliu.EchoString.message', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=41,
  serialized_end=70,
)

DESCRIPTOR.message_types_by_name['void'] = _VOID
DESCRIPTOR.message_types_by_name['EchoString'] = _ECHOSTRING

void = _reflection.GeneratedProtocolMessageType('void', (_message.Message,), dict(
  DESCRIPTOR = _VOID,
  __module__ = 'ServerCommon_pb2'
  # @@protoc_insertion_point(class_scope:christliu.void)
  ))
_sym_db.RegisterMessage(void)

EchoString = _reflection.GeneratedProtocolMessageType('EchoString', (_message.Message,), dict(
  DESCRIPTOR = _ECHOSTRING,
  __module__ = 'ServerCommon_pb2'
  # @@protoc_insertion_point(class_scope:christliu.EchoString)
  ))
_sym_db.RegisterMessage(EchoString)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\220\001\001'))

_SERVICECOMMON = _descriptor.ServiceDescriptor(
  name='ServiceCommon',
  full_name='christliu.ServiceCommon',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=72,
  serialized_end=139,
  methods=[
  _descriptor.MethodDescriptor(
    name='sayHello',
    full_name='christliu.ServiceCommon.sayHello',
    index=0,
    containing_service=None,
    input_type=_ECHOSTRING,
    output_type=_VOID,
    options=None,
  ),
])

ServiceCommon = service_reflection.GeneratedServiceType('ServiceCommon', (_service.Service,), dict(
  DESCRIPTOR = _SERVICECOMMON,
  __module__ = 'ServerCommon_pb2'
  ))

ServiceCommon_Stub = service_reflection.GeneratedServiceStubType('ServiceCommon_Stub', (ServiceCommon,), dict(
  DESCRIPTOR = _SERVICECOMMON,
  __module__ = 'ServerCommon_pb2'
  ))



_CLIENTCOMMON = _descriptor.ServiceDescriptor(
  name='ClientCommon',
  full_name='christliu.ClientCommon',
  file=DESCRIPTOR,
  index=1,
  options=None,
  serialized_start=141,
  serialized_end=211,
  methods=[
  _descriptor.MethodDescriptor(
    name='helloRespond',
    full_name='christliu.ClientCommon.helloRespond',
    index=0,
    containing_service=None,
    input_type=_ECHOSTRING,
    output_type=_VOID,
    options=None,
  ),
])

ClientCommon = service_reflection.GeneratedServiceType('ClientCommon', (_service.Service,), dict(
  DESCRIPTOR = _CLIENTCOMMON,
  __module__ = 'ServerCommon_pb2'
  ))

ClientCommon_Stub = service_reflection.GeneratedServiceStubType('ClientCommon_Stub', (ClientCommon,), dict(
  DESCRIPTOR = _CLIENTCOMMON,
  __module__ = 'ServerCommon_pb2'
  ))


# @@protoc_insertion_point(module_scope)
